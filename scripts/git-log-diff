#!/bin/sh

set -e

commit_tag="${1}"

print() {
  darkblue="\e[0;34m"
	blue="\e[1;34m"
	normal="\e[0m"

	first_arg="${1}"
	shift
	rest="${*}"

	printf "${darkblue}%s: ${blue}%s\n${normal}" "${first_arg}" "${rest}" >&2
}

current_ref="refs/tags/${commit_tag}"

escaped_current_ref=$(printf '%s' "${current_ref}" | sed 's/[.[/\(*^$+?{|]/\\&/g')

print currentRef "${current_ref}"

# get sorted list of ref/tags, remove all tags with dash (ie pre-release tags) and then return previous tag
prev_ref=$(git -c versionsort.suffix=- for-each-ref --sort=-v:refname --format '%(refname)' refs/tags | sed -n -e "/${escaped_current_ref}/,\$p" | tail -n +2 | grep -v "-" | sed -n 1p)
print prevRef "${prev_ref}"

if [ -n "${prev_ref}" ]; then
  common_ancestor=$(git merge-base "${prev_ref}" "${current_ref}")
  print commonAncestor "${common_ancestor}"

  current_messages=$(git --no-pager log --pretty=format:%s "${current_ref}" "^${common_ancestor}" | sort || true)
  prev_messages=$(git --no-pager log --pretty=format:%s "${prev_ref}" "^${common_ancestor}" | sort || true)

  ## https://unix.stackexchange.com/a/309594
  diff_response=$(
  {
    echo "${prev_messages}" 4<&- | {
      # in here fd 3 points to the reading end of the pipe
      # from cmd1, while fd 0 has been restored from the original
      # stdin (saved on fd 4, now closed as no longer needed)

      echo "${current_messages}" 3<&- | comm -13 /dev/fd/3 -

    } 3<&0 <&4 4<&- # restore the original stdin for cmd2

  } 4<&0 # save a copy of stdin for cmd2
  )

  echo "${diff_response}" | uniq | sed 's/^/- /'
else
  current_messages=$(git --no-pager log --pretty=format:%s "${current_ref}" | sort || true)
  echo "${current_messages}" | uniq | sed 's/^/- /'
fi
